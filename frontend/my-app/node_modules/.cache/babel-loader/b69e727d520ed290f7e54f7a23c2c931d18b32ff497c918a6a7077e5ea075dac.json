{"ast":null,"code":"import axios from 'axios';\nexport const startGetOneCustomer = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:3009/api/customers`, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      console.log(response.data);\n      dispatch(getOneCustomer(response.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nconst getOneCustomer = data => ({\n  type: 'GET_ONE_USER',\n  payload: data\n});","map":{"version":3,"names":["axios","startGetOneCustomer","dispatch","response","get","headers","Authorization","localStorage","getItem","console","log","data","getOneCustomer","error","type","payload"],"sources":["C:/Users/samiksha wagrekar/OneDrive/Documents/oct23 mern/ChitGem-app/frontend/my-app/src/Components/Actions/customersAction.js"],"sourcesContent":["import axios from 'axios'\r\nexport const startGetOneCustomer = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:3009/api/customers`,{\r\n                headers : {\r\n                    Authorization : localStorage.getItem('token')\r\n                }\r\n            })\r\n            console.log(response.data)\r\n            dispatch(getOneCustomer(response.data))\r\n        } catch (error) {\r\n           console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst getOneCustomer = (data) => ({\r\n    type: 'GET_ONE_USER',\r\n    payload: data\r\n})"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACrC,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,qCAAoC,EAAC;QACnEC,OAAO,EAAG;UACNC,aAAa,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAChD;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC;MAC1BT,QAAQ,CAACU,cAAc,CAACT,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACbJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACrB;EACJ,CAAC;AACL,CAAC;AAED,MAAMD,cAAc,GAAID,IAAI,KAAM;EAC9BG,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAEJ;AACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}