{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vigne\\\\OneDrive\\\\Desktop\\\\portfolio chit-Gem\\\\ChitGem-app\\\\frontend\\\\my-app\\\\src\\\\Components\\\\Customer\\\\CustomersForm.js\",\n  _s = $RefreshSig$();\n// import {useState,useEffect,useContext} from 'react'\n// import axios from 'axios'\n// import { CustomersContext } from '../../Context/CustomersContext'\n// export default function CustomersForm(props){\n//     const {customers,customerDispatch} = useContext(CustomersContext)\n//     const [name,setName] = useState('')\n//     const [email,setEmail] = useState('')\n//     const [mobile,setMobile] = useState('')\n//     const [description,setDescription] = useState('')\n//     const [customer,setCustomer] = useState([])\n\n//     const {editId} = props\n//     console.log(editId)\n\n//     useEffect(()=>{\n//         const customer = customers?.data.find(ele=>ele._id==editId)\n//         setCustomer(customer)\n//         if(customer){\n//             setName(customer.name || '')\n//             setEmail(customer.contact?.email || '')\n//             setMobile(customer.contact?.mobile || '')\n//             setDescription(customer.description || '')\n//         }else{\n//             setName('')\n//             setEmail('')\n//             setMobile('')\n//             setDescription('')\n//         }\n//     },[customers,editId])\n\n// //     const [form,setForm] = useState(customer ? {\n// //         name : customer.name,\n// //         email : customer.contact.email,\n// //         mobile : customer.contact.mobile,\n// //         description : customer.description\n// //     } :{\n// //     name : '',\n// //     email : '',\n// //     mobile : '',\n// //     description : ''\n// //     }\n// //  )\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n\n//         const formData = {\n//             name : name,\n//             contact: { \n//             email:email,\n//             mobile:mobile\n//             },\n//             description : description\n//         }\n//         try{\n//             if(customer){\n//                 const response = await axios.put(`http://localhost:3009/api/customers/${customer._id}`,formData,{\n//                     headers : {\n//                         Authorization : localStorage.getItem('token')\n//                     }\n//                 })\n//                 console.log(response.data)\n//                 customerDispatch({type:'UPDATE_CUSTOMERS', payload : response.data})\n//                 props.toggle()\n\n//             }else{\n//             const response = await axios.post('http://localhost:3009/api/customers',formData,{\n//                 headers : {\n//                     Authorization : localStorage.getItem('token')\n//                 }\n//             })\n//             console.log(response.data)\n//             customerDispatch({type:'ADD_CUSTOMERS', payload: response.data})\n//             setName('')\n//             setEmail('')\n//             setMobile('')\n//             setDescription('')\n//         }\n//     }\n//         catch(err){\n//             console.log(err)\n//         }\n//     }\n//     return(\n//         <div>\n//             <form onSubmit = {handleSubmit}>\n//                 <div>\n//                 <label htmlFor=\"name\">name</label>\n//                 <input type = \"text\"\n//                 value = {name}\n//                 onChange={(e)=>setName(e.target.value)}\n//                 className='form-control'\n//                 name = 'name'\n//                 id = 'name'\n//                 />\n//                 </div>\n//                 <div>\n//                 <label htmlFor=\"email\">email</label>\n//                 <input type = \"email\"\n//                 value = {email}\n//                 onChange={(e)=>setEmail(e.target.value)}\n//                 className='form-control'\n//                 name = 'email'\n//                 id = 'email'\n//                 />  \n//                 </div>\n//                 <div>\n//                 <label htmlFor=\"mobile\">mobile</label>\n//                 <input type = \"text\"\n//                 value = {mobile}\n//                 onChange={(e)=>setMobile(e.target.value)}\n//                 className='form-control'\n//                 name = 'mobile'\n//                 id = 'mobile'\n//                 />  \n//                 </div>\n//                 <div>\n//                 <label htmlFor=\"description\">description</label>\n//                 <input type = \"text\"\n//                 value = {description}\n//                 onChange= {(e)=>setDescription(e.target.value)}\n//                 className='form-control'\n//                 name = 'description'\n//                 id = 'description'\n//                 />  \n//                 </div>\n//                 <div>\n//                 <input type = 'submit' className='btn btn-primary'/>\n//                 </div>\n//             </form>\n//         </div>\n//     )\n// }\n// import { useState, useEffect, useContext } from 'react';\n// import axios from 'axios';\n// import { CustomersContext } from '../../Context/CustomersContext';\n// import { useAuth } from '../../Context/AuthrorizeContext';\n\nimport { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { CustomersContext } from '../../Context/CustomersContext';\nimport { useAuth } from '../../Context/AuthrorizeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomersForm(props) {\n  _s();\n  const {\n    customers,\n    customerDispatch\n  } = useContext(CustomersContext);\n  const {\n    editId,\n    toggle,\n    users\n  } = props;\n  console.log(users);\n\n  // Initialize the form state with an empty customer object\n  const [customer, setCustomer] = useState({\n    name: '',\n    contact: {\n      email: '',\n      mobile: ''\n    },\n    description: ''\n  });\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  console.log(filteredUsers);\n  useEffect(() => {\n    if (editId) {\n      const customer = customers === null || customers === void 0 ? void 0 : customers.data.find(ele => ele._id === editId);\n      if (customer) {\n        // Update the form state with the fetched customer data\n        setCustomer(customer);\n      }\n    } else {\n      // Reset the form state when there's no editId\n      setCustomer({\n        name: '',\n        contact: {\n          email: '',\n          mobile: ''\n        },\n        description: ''\n      });\n    }\n  }, [customers, editId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let response;\n      if (editId) {\n        response = await axios.put(`http://localhost:3009/api/customers/${editId}`, customer, {\n          headers: {\n            Authorization: localStorage.getItem('token')\n          }\n        });\n        customerDispatch({\n          type: 'UPDATE_CUSTOMERS',\n          payload: response.data\n        });\n      } else {\n        response = await axios.post('http://localhost:3009/api/customers', customer, {\n          headers: {\n            Authorization: localStorage.getItem('token')\n          }\n        });\n        customerDispatch({\n          type: 'ADD_CUSTOMERS',\n          payload: response.data\n        });\n      }\n      toggle(); // Close the form after submission\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Function to update the form state when any field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // If the field is nested, update the nested state correctly\n    if (name.includes('.')) {\n      const [fieldName, nestedField] = name.split('.');\n      setCustomer(prevState => ({\n        ...prevState,\n        [fieldName]: {\n          ...prevState[fieldName],\n          [nestedField]: value\n        }\n      }));\n    } else {\n      setCustomer(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  useEffect(() => {\n    if (Array.isArray(users)) {\n      setFilteredUsers(users);\n    }\n  }, [users]);\n  console.log(filteredUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customer.name,\n          onChange: handleChange,\n          className: \"form-control\",\n          name: \"name\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customer.contact.email || customer.contact.ownerEmail // Use email or ownerEmail depending on the role\n          ,\n          onChange: handleChange,\n          className: \"form-control\",\n          name: \"contact.email\",\n          id: \"email\",\n          list: \"emailSuggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"emailSuggestions\",\n          children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user._id ? user._id : user.email,\n            children: \"user.email\"\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobile\",\n          children: \"Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customer.contact.mobile,\n          onChange: handleChange,\n          className: \"form-control\",\n          name: \"contact.mobile\",\n          id: \"mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customer.description,\n          onChange: handleChange,\n          className: \"form-control\",\n          name: \"description\",\n          id: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomersForm, \"XFq5tUWUHVY/wfl2zSrQyc6ZHVY=\");\n_c = CustomersForm;\nvar _c;\n$RefreshReg$(_c, \"CustomersForm\");","map":{"version":3,"names":["useState","useEffect","useContext","axios","CustomersContext","useAuth","jsxDEV","_jsxDEV","CustomersForm","props","_s","customers","customerDispatch","editId","toggle","users","console","log","customer","setCustomer","name","contact","email","mobile","description","filteredUsers","setFilteredUsers","data","find","ele","_id","handleSubmit","e","preventDefault","response","put","headers","Authorization","localStorage","getItem","type","payload","post","err","handleChange","value","target","includes","fieldName","nestedField","split","prevState","Array","isArray","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","id","ownerEmail","list","map","user","_c","$RefreshReg$"],"sources":["C:/Users/vigne/OneDrive/Desktop/portfolio chit-Gem/ChitGem-app/frontend/my-app/src/Components/Customer/CustomersForm.js"],"sourcesContent":["// import {useState,useEffect,useContext} from 'react'\r\n// import axios from 'axios'\r\n// import { CustomersContext } from '../../Context/CustomersContext'\r\n// export default function CustomersForm(props){\r\n//     const {customers,customerDispatch} = useContext(CustomersContext)\r\n//     const [name,setName] = useState('')\r\n//     const [email,setEmail] = useState('')\r\n//     const [mobile,setMobile] = useState('')\r\n//     const [description,setDescription] = useState('')\r\n//     const [customer,setCustomer] = useState([])\r\n    \r\n    \r\n\r\n//     const {editId} = props\r\n//     console.log(editId)\r\n\r\n//     useEffect(()=>{\r\n//         const customer = customers?.data.find(ele=>ele._id==editId)\r\n//         setCustomer(customer)\r\n//         if(customer){\r\n//             setName(customer.name || '')\r\n//             setEmail(customer.contact?.email || '')\r\n//             setMobile(customer.contact?.mobile || '')\r\n//             setDescription(customer.description || '')\r\n//         }else{\r\n//             setName('')\r\n//             setEmail('')\r\n//             setMobile('')\r\n//             setDescription('')\r\n//         }\r\n//     },[customers,editId])\r\n\r\n// //     const [form,setForm] = useState(customer ? {\r\n// //         name : customer.name,\r\n// //         email : customer.contact.email,\r\n// //         mobile : customer.contact.mobile,\r\n// //         description : customer.description\r\n// //     } :{\r\n// //     name : '',\r\n// //     email : '',\r\n// //     mobile : '',\r\n// //     description : ''\r\n// //     }\r\n// //  )\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault()\r\n\r\n//         const formData = {\r\n//             name : name,\r\n//             contact: { \r\n//             email:email,\r\n//             mobile:mobile\r\n//             },\r\n//             description : description\r\n//         }\r\n//         try{\r\n//             if(customer){\r\n//                 const response = await axios.put(`http://localhost:3009/api/customers/${customer._id}`,formData,{\r\n//                     headers : {\r\n//                         Authorization : localStorage.getItem('token')\r\n//                     }\r\n//                 })\r\n//                 console.log(response.data)\r\n//                 customerDispatch({type:'UPDATE_CUSTOMERS', payload : response.data})\r\n//                 props.toggle()\r\n\r\n//             }else{\r\n//             const response = await axios.post('http://localhost:3009/api/customers',formData,{\r\n//                 headers : {\r\n//                     Authorization : localStorage.getItem('token')\r\n//                 }\r\n//             })\r\n//             console.log(response.data)\r\n//             customerDispatch({type:'ADD_CUSTOMERS', payload: response.data})\r\n//             setName('')\r\n//             setEmail('')\r\n//             setMobile('')\r\n//             setDescription('')\r\n//         }\r\n//     }\r\n//         catch(err){\r\n//             console.log(err)\r\n//         }\r\n//     }\r\n//     return(\r\n//         <div>\r\n//             <form onSubmit = {handleSubmit}>\r\n//                 <div>\r\n//                 <label htmlFor=\"name\">name</label>\r\n//                 <input type = \"text\"\r\n//                 value = {name}\r\n//                 onChange={(e)=>setName(e.target.value)}\r\n//                 className='form-control'\r\n//                 name = 'name'\r\n//                 id = 'name'\r\n//                 />\r\n//                 </div>\r\n//                 <div>\r\n//                 <label htmlFor=\"email\">email</label>\r\n//                 <input type = \"email\"\r\n//                 value = {email}\r\n//                 onChange={(e)=>setEmail(e.target.value)}\r\n//                 className='form-control'\r\n//                 name = 'email'\r\n//                 id = 'email'\r\n//                 />  \r\n//                 </div>\r\n//                 <div>\r\n//                 <label htmlFor=\"mobile\">mobile</label>\r\n//                 <input type = \"text\"\r\n//                 value = {mobile}\r\n//                 onChange={(e)=>setMobile(e.target.value)}\r\n//                 className='form-control'\r\n//                 name = 'mobile'\r\n//                 id = 'mobile'\r\n//                 />  \r\n//                 </div>\r\n//                 <div>\r\n//                 <label htmlFor=\"description\">description</label>\r\n//                 <input type = \"text\"\r\n//                 value = {description}\r\n//                 onChange= {(e)=>setDescription(e.target.value)}\r\n//                 className='form-control'\r\n//                 name = 'description'\r\n//                 id = 'description'\r\n//                 />  \r\n//                 </div>\r\n//                 <div>\r\n//                 <input type = 'submit' className='btn btn-primary'/>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n// import { useState, useEffect, useContext } from 'react';\r\n// import axios from 'axios';\r\n// import { CustomersContext } from '../../Context/CustomersContext';\r\n// import { useAuth } from '../../Context/AuthrorizeContext';\r\n\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { CustomersContext } from '../../Context/CustomersContext';\r\nimport { useAuth } from '../../Context/AuthrorizeContext';\r\n\r\nexport default function CustomersForm(props) {\r\n    const { customers, customerDispatch } = useContext(CustomersContext);\r\n    const { editId, toggle, users } = props;\r\n    console.log(users)\r\n\r\n    // Initialize the form state with an empty customer object\r\n    const [customer, setCustomer] = useState({\r\n        name: '',\r\n        contact: { email: '', mobile: '' },\r\n        description: ''\r\n    });\r\n    const [filteredUsers, setFilteredUsers] = useState([])\r\n\r\n    console.log(filteredUsers)\r\n    useEffect(() => {\r\n        if (editId) {\r\n            const customer = customers?.data.find(ele => ele._id === editId);\r\n            if (customer) {\r\n                // Update the form state with the fetched customer data\r\n                setCustomer(customer);\r\n            }\r\n        } else {\r\n            // Reset the form state when there's no editId\r\n            setCustomer({\r\n                name: '',\r\n                contact: { email: '', mobile: '' },\r\n                description: ''\r\n            });\r\n        }\r\n    }, [customers, editId]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let response;\r\n            if (editId) {\r\n                response = await axios.put(`http://localhost:3009/api/customers/${editId}`, customer, {\r\n                    headers: {\r\n                        Authorization: localStorage.getItem('token')\r\n                    }\r\n                });\r\n                customerDispatch({ type: 'UPDATE_CUSTOMERS', payload: response.data });\r\n            } else {\r\n                response = await axios.post('http://localhost:3009/api/customers', customer, {\r\n                    headers: {\r\n                        Authorization: localStorage.getItem('token')\r\n                    }\r\n                });\r\n                customerDispatch({ type: 'ADD_CUSTOMERS', payload: response.data });\r\n            }\r\n            toggle(); // Close the form after submission\r\n        } catch (err) {\r\n           console.log(err)\r\n        }\r\n    };\r\n\r\n    // Function to update the form state when any field changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        // If the field is nested, update the nested state correctly\r\n        if (name.includes('.')) {\r\n            const [fieldName, nestedField] = name.split('.');\r\n            setCustomer(prevState => ({\r\n                ...prevState,\r\n                [fieldName]: {\r\n                    ...prevState[fieldName],\r\n                    [nestedField]: value\r\n                }\r\n            }));\r\n        } else {\r\n            setCustomer(prevState => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (Array.isArray(users)) {\r\n            setFilteredUsers(users);\r\n        }\r\n    }, [users]);\r\n    console.log(filteredUsers)\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={customer.name}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={customer.contact.email || customer.contact.ownerEmail} // Use email or ownerEmail depending on the role\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        name=\"contact.email\"\r\n                        id=\"email\"\r\n                        list=\"emailSuggestions\"\r\n                    />\r\n                    <datalist id=\"emailSuggestions\">\r\n                        {filteredUsers.map((user) => (\r\n                            <option key={user._id} value={user._id ? user._id : user.email}>user.email</option>\r\n                        ))}\r\n                    </datalist>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"mobile\">Mobile</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={customer.contact.mobile}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        name=\"contact.mobile\"\r\n                        id=\"mobile\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={customer.description}\r\n                        onChange={handleChange}\r\n                        className=\"form-control\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,OAAO,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC,SAAS;IAAEC;EAAiB,CAAC,GAAGV,UAAU,CAACE,gBAAgB,CAAC;EACpE,MAAM;IAAES,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGN,KAAK;EACvCO,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;EAElB;EACA,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IACrCoB,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAClCC,WAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}