{"ast":null,"code":"import axios from 'axios';\nexport const getReviews = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get('http://localhost:3009/api/reviews');\n      dispatch(setReviews(response.data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nconst setReviews = data => {\n  return {\n    type: 'SET_REVIEW',\n    payload: data\n  };\n};\nexport const setServerErrors = errors => {\n  return {\n    type: \"SET_ERRORS\",\n    payload: errors\n  };\n};\nexport const addReview = reviewData => {\n  return async dispatch => {\n    try {\n      const response = await axios.post('http://localhost:3009/api/reviews', reviewData);\n      dispatch(addReviewSuccess(response.data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nconst addReviewSuccess = data => {\n  return {\n    type: 'ADD_REVIEW',\n    payload: data\n  };\n};\nexport const updateReview = (id, reviewData) => {\n  return async dispatch => {\n    try {\n      const response = await axios.put(`http://localhost:3009/api/reviews/${id}`, reviewData);\n      dispatch(updateReviewSuccess(response.data));\n      return response.data;\n    } catch (err) {\n      console.error('Error updating review:', err);\n      throw err;\n    }\n  };\n};\nconst updateReviewSuccess = data => {\n  return {\n    type: 'UPDATE_REVIEW',\n    payload: data\n  };\n};\nexport const removeReview = id => {\n  return async dispatch => {\n    try {\n      const response = await axios.delete(`http://localhost:3009/api/reviews/${id}`);\n      dispatch(removeReviewSuccess(id));\n      return response.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nconst removeReviewSuccess = id => {\n  return {\n    type: 'DELETE_REVIEW',\n    payload: id\n  };\n};","map":{"version":3,"names":["axios","getReviews","dispatch","response","get","setReviews","data","err","console","log","type","payload","setServerErrors","errors","addReview","reviewData","post","addReviewSuccess","updateReview","id","put","updateReviewSuccess","error","removeReview","delete","removeReviewSuccess"],"sources":["C:/Users/vigne/OneDrive/Desktop/portfolio chit-Gem/ChitGem-app/frontend/my-app/src/Components/Actions/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const getReviews = () => {\n    return async (dispatch) => {\n        try {\n            const response = await axios.get('http://localhost:3009/api/reviews');\n            dispatch(setReviews(response.data));\n        } catch (err) {\n            console.log(err);\n        }\n    };\n};\n\nconst setReviews = (data) => {\n    return {\n        type: 'SET_REVIEW',\n        payload: data\n    };\n};\n\nexport const setServerErrors = (errors) => {\n    return { \n        type: \"SET_ERRORS\",\n        payload: errors \n    };\n};\n\nexport const addReview = (reviewData) => {\n    return async (dispatch) => {\n        try {\n            const response = await axios.post('http://localhost:3009/api/reviews', reviewData);\n            dispatch(addReviewSuccess(response.data));\n        } catch (err) {\n            console.log(err);\n        }\n    };\n};\n\nconst addReviewSuccess = (data) => {\n    return {\n        type: 'ADD_REVIEW',\n        payload: data\n    };\n};\n\nexport const updateReview = (id, reviewData) => {\n    return async (dispatch) => {\n        try {\n            const response = await axios.put(`http://localhost:3009/api/reviews/${id}`, reviewData);\n            dispatch(updateReviewSuccess(response.data));\n            return response.data;\n        } catch (err) {\n            console.error('Error updating review:', err);\n            throw err;\n        }\n    };\n};\n\nconst updateReviewSuccess = (data) => {\n    return {\n        type: 'UPDATE_REVIEW',\n        payload: data\n    };\n};\n\nexport const removeReview = (id) => {\n    return async (dispatch) => {\n        try {\n            const response = await axios.delete(`http://localhost:3009/api/reviews/${id}`);\n            dispatch(removeReviewSuccess(id));\n            return response.data;\n\n        } catch (err) {\n            console.log(err);\n        }\n    };\n};\n\nconst removeReviewSuccess = (id) => {\n    return {\n        type: 'DELETE_REVIEW',\n        payload: id\n    };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mCAAmC,CAAC;MACrEF,QAAQ,CAACG,UAAU,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;AACL,CAAC;AAED,MAAMF,UAAU,GAAIC,IAAI,IAAK;EACzB,OAAO;IACHI,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEL;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMM,eAAe,GAAIC,MAAM,IAAK;EACvC,OAAO;IACHH,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEE;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIC,UAAU,IAAK;EACrC,OAAO,MAAOb,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACgB,IAAI,CAAC,mCAAmC,EAAED,UAAU,CAAC;MAClFb,QAAQ,CAACe,gBAAgB,CAACd,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;AACL,CAAC;AAED,MAAMU,gBAAgB,GAAIX,IAAI,IAAK;EAC/B,OAAO;IACHI,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEL;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMY,YAAY,GAAGA,CAACC,EAAE,EAAEJ,UAAU,KAAK;EAC5C,OAAO,MAAOb,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACoB,GAAG,CAAE,qCAAoCD,EAAG,EAAC,EAAEJ,UAAU,CAAC;MACvFb,QAAQ,CAACmB,mBAAmB,CAAClB,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC5C,OAAOH,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACc,KAAK,CAAC,wBAAwB,EAAEf,GAAG,CAAC;MAC5C,MAAMA,GAAG;IACb;EACJ,CAAC;AACL,CAAC;AAED,MAAMc,mBAAmB,GAAIf,IAAI,IAAK;EAClC,OAAO;IACHI,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEL;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMiB,YAAY,GAAIJ,EAAE,IAAK;EAChC,OAAO,MAAOjB,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACwB,MAAM,CAAE,qCAAoCL,EAAG,EAAC,CAAC;MAC9EjB,QAAQ,CAACuB,mBAAmB,CAACN,EAAE,CAAC,CAAC;MACjC,OAAOhB,QAAQ,CAACG,IAAI;IAExB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;AACL,CAAC;AAED,MAAMkB,mBAAmB,GAAIN,EAAE,IAAK;EAChC,OAAO;IACHT,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEQ;EACb,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}