{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vigne\\\\OneDrive\\\\Desktop\\\\portfolio chit-Gem\\\\ChitGem-app\\\\frontend\\\\my-app\\\\src\\\\Components\\\\GoldPriceGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as Chartjs } from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport 'chartjs-plugin-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoldPriceGraph = () => {\n  _s();\n  const [goldPrices, setGoldPrices] = useState(null);\n  console.log(goldPrices);\n  useEffect(() => {\n    const fetchGoldPrices = async () => {\n      // try {\n      //   const response = await axios.get('http://localhost:3009/api/goldprice')\n      //   console.log(\"Gold Prices Data:\", response.data)\n      //   if (response.data.length > 0) {\n      //     const formattedData = {\n      //       labels: response.data.map((individualData) => formatDate(individualData.timestamp)),\n      //       datasets: [{\n      //         label: 'Gold Price',\n      //         data: response.data.map((individualData) => individualData.goldPrice),\n      //         borderColor: 'lightblue',\n      //       }]\n      //     }\n      //     setGoldPrices(formattedData)\n      //   } else {\n      //     console.log(\"No data found\")\n      //   }\n      // } catch (error) {\n      //   console.error('Error fetching gold prices:', error)\n      // }\n    };\n    fetchGoldPrices();\n    const interval = setInterval(fetchGoldPrices);\n    fetchGoldPrices();\n    return () => clearInterval(interval);\n  }, []);\n  const formatDate = timestamp => {\n    const date = new Date(parseInt(timestamp) * 1000);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  };\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: 'darktblue'\n        }\n      },\n      y: {\n        ticks: {\n          color: 'darktblue'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    style: {\n      paddingTop: '90px'\n    },\n    children: goldPrices !== null ? /*#__PURE__*/_jsxDEV(Line, {\n      data: goldPrices,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Gold Price Data is Null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(GoldPriceGraph, \"hYNB+pqM5qnPLCPP/K+KkUjVlMc=\");\n_c = GoldPriceGraph;\nexport default GoldPriceGraph;\nvar _c;\n$RefreshReg$(_c, \"GoldPriceGraph\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","Chartjs","Line","jsxDEV","_jsxDEV","GoldPriceGraph","_s","goldPrices","setGoldPrices","console","log","fetchGoldPrices","interval","setInterval","clearInterval","formatDate","timestamp","date","Date","parseInt","toLocaleDateString","toLocaleTimeString","options","scales","x","ticks","color","y","className","style","paddingTop","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vigne/OneDrive/Desktop/portfolio chit-Gem/ChitGem-app/frontend/my-app/src/Components/GoldPriceGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Chart as Chartjs} from 'chart.js/auto'\n\nimport { Line } from 'react-chartjs-2'\nimport 'chartjs-adapter-date-fns';\nimport 'chartjs-plugin-annotation'\n\nconst GoldPriceGraph = () => {\n  const [goldPrices, setGoldPrices] = useState(null)\n  console.log(goldPrices)\n\n  useEffect(() => {\n    const fetchGoldPrices = async () => {\n      // try {\n      //   const response = await axios.get('http://localhost:3009/api/goldprice')\n      //   console.log(\"Gold Prices Data:\", response.data)\n      //   if (response.data.length > 0) {\n      //     const formattedData = {\n      //       labels: response.data.map((individualData) => formatDate(individualData.timestamp)),\n      //       datasets: [{\n      //         label: 'Gold Price',\n      //         data: response.data.map((individualData) => individualData.goldPrice),\n      //         borderColor: 'lightblue',\n      //       }]\n      //     }\n      //     setGoldPrices(formattedData)\n      //   } else {\n      //     console.log(\"No data found\")\n      //   }\n      // } catch (error) {\n      //   console.error('Error fetching gold prices:', error)\n      // }\n    }\n\n    fetchGoldPrices()\n\n    const interval = setInterval(fetchGoldPrices)\n\n    fetchGoldPrices()\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const formatDate = (timestamp) => {\n    const date = new Date(parseInt(timestamp) * 1000) \n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n  }\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          color: 'darktblue', \n        },\n      },\n      y: {\n        ticks: {\n          color: 'darktblue',\n        },\n      },\n    },\n  }\n\n  return (\n    <div className=\"wrapper\" style = {{paddingTop : '90px'}}>\n      {goldPrices !== null ? (\n        <Line data={goldPrices}options={options} />\n      ) : (\n        <div>Gold Price Data is Null</div>\n      )}\n    </div>\n  )\n}\n\nexport default GoldPriceGraph\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,IAAIC,OAAO,QAAO,eAAe;AAE9C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,0BAA0B;AACjC,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClDY,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvBT,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IAEDA,eAAe,CAAC,CAAC;IAEjB,MAAMC,QAAQ,GAAGC,WAAW,CAACF,eAAe,CAAC;IAE7CA,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAIC,SAAS,IAAK;IAChC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAACH,SAAS,CAAC,GAAG,IAAI,CAAC;IACjD,OAAQ,GAAEC,IAAI,CAACG,kBAAkB,CAAC,CAAE,IAAGH,IAAI,CAACI,kBAAkB,CAAC,CAAE,EAAC;EACpE,CAAC;EACD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MACDC,CAAC,EAAE;QACDF,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF;IACF;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,SAAS;IAACC,KAAK,EAAI;MAACC,UAAU,EAAG;IAAM,CAAE;IAAAC,QAAA,EACrDxB,UAAU,KAAK,IAAI,gBAClBH,OAAA,CAACF,IAAI;MAAC8B,IAAI,EAAEzB,UAAW;MAAAe,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3ChC,OAAA;MAAA2B,QAAA,EAAK;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA9B,EAAA,CAhEKD,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAkEpB,eAAeA,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}