{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samiksha wagrekar\\\\OneDrive\\\\Documents\\\\oct23 mern\\\\ChitGem-app\\\\frontend\\\\my-app\\\\src\\\\Components\\\\Shop\\\\ShopsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCreateShop, startUpdateShop, setServerErrors, clearServerErrors } from '../Actions/shops';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShopsForm(props) {\n  _s();\n  const [shopName, setShopname] = useState('');\n  const [area, setArea] = useState('');\n  const [pincode, setPincode] = useState(0);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [email, setEmail] = useState(0);\n  const [mobile, setMobile] = useState('');\n  const [description, setDescription] = useState('');\n  const [approvalStatus, setApprovalStatus] = useState('pending');\n  const [formErrors, setFormErrors] = useState({});\n  const [shop, setShop] = useState({});\n  // const [serverErrors,setServerErrors]=useState([])\n  const {\n    editId\n  } = props;\n  const dispatch = useDispatch();\n  const serverErrors = useSelector(state => state.shops.serverErrors);\n  const shops = useSelector(state => state.shops);\n  useEffect(() => {\n    setShop(shop);\n    if (shops && shops.data) {\n      const shopData = shops.data.find(shop => shop._id === editId);\n      if (shopData) {\n        var _shopData$address, _shopData$address2, _shopData$address3, _shopData$address4, _shopData$contact, _shopData$contact2;\n        setShopname(shopData.shopName || '');\n        setArea(((_shopData$address = shopData.address) === null || _shopData$address === void 0 ? void 0 : _shopData$address.area) || ''); // Handle optional chaining for nested properties\n        setPincode(((_shopData$address2 = shopData.address) === null || _shopData$address2 === void 0 ? void 0 : _shopData$address2.pincode) || '');\n        setCity(((_shopData$address3 = shopData.address) === null || _shopData$address3 === void 0 ? void 0 : _shopData$address3.city) || '');\n        setState(((_shopData$address4 = shopData.address) === null || _shopData$address4 === void 0 ? void 0 : _shopData$address4.state) || '');\n        setEmail(((_shopData$contact = shopData.contact) === null || _shopData$contact === void 0 ? void 0 : _shopData$contact.email) || '');\n        setMobile(((_shopData$contact2 = shopData.contact) === null || _shopData$contact2 === void 0 ? void 0 : _shopData$contact2.mobile) || '');\n        setDescription(shopData.description || '');\n        setApprovalStatus(shopData.approvalStatus || 'pending');\n      } else {\n        setShopname('');\n        setArea('');\n        setPincode('');\n        setCity('');\n        setState('');\n        setEmail('');\n        setMobile('');\n        setDescription('');\n        setApprovalStatus('pending');\n      }\n    }\n  }, [shop, editId]);\n  const validateForm = () => {\n    const errors = {};\n    if (!shopName.trim()) {\n      errors.shopName = 'Shop name is required';\n    }\n    if (!area.trim()) {\n      errors.area = 'Area is required';\n    }\n    if (!pincode) {\n      errors.pincode = 'Pincode is required';\n    }\n    if (!city.trim()) {\n      errors.city = 'City is required';\n    }\n    if (!state.trim()) {\n      errors.state = 'State is required';\n    }\n    if (!email.trim()) {\n      errors.email = 'Email is required';\n    }\n    if (!mobile) {\n      errors.mobile = 'Mobile number is required';\n    }\n    if (!description.trim()) {\n      errors.description = 'Description is required';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const formData = {\n      shopName,\n      address: {\n        area,\n        pincode,\n        city,\n        state\n      },\n      contact: {\n        mobile,\n        email\n      },\n      description,\n      approvalStatus\n    };\n    try {\n      if (editId) {\n        dispatch(startUpdateShop(editId, formData));\n      } else {\n        dispatch(startCreateShop(formData));\n      }\n      dispatch(clearServerErrors());\n      resetForm();\n    } catch (err) {\n      console.error('Error:', err);\n      if (err.response && err.response.data) {\n        dispatch(setServerErrors(err.response.data.errors || []));\n      }\n    }\n  };\n  const resetForm = () => {\n    setShopname('');\n    setArea('');\n    setPincode('');\n    setCity('');\n    setState('');\n    setEmail('');\n    setMobile('');\n    setDescription('');\n    setApprovalStatus('pending');\n    setFormErrors({});\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [serverErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"These errors prohibited the form from being saved:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: serverErrors.map((ele, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", ele.msg]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shop Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shopName,\n          className: \"form-control\",\n          onChange: e => setShopname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), formErrors.shopName && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.shopName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Area:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: area,\n          className: \"form-control\",\n          onChange: e => setArea(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), formErrors.area && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pincode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: pincode,\n          onChange: e => setPincode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), formErrors.pincode && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.pincode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), formErrors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state,\n          onChange: e => setState(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), formErrors.state && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mobile:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: mobile,\n          onChange: e => setMobile(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), formErrors.mobile && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          className: \"form-control\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), !props.editId &&\n      /*#__PURE__*/\n      // Conditionally render the Approval Status field if not editing\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Approval Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: approvalStatus,\n          onChange: e => setApprovalStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rejected\",\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"approved\",\n            children: \"Approved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), formErrors.approvalStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.approvalStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { startCreateShop, startUpdateShop, clearServerErrors, setServerErrors } from '../Actions/shops';\n\n// export default function ShopsForm({ editId, toggle }) {\n//     const [shopData, setShopData] = useState({\n//         shopName: '',\n//         area: '',\n//         pincode: '',\n//         city: '',\n//         state: '',\n//         email: '',\n//         mobile: '',\n//         description: '',\n//         approvalStatus: 'pending'\n//     });\n//     const [formErrors, setFormErrors] = useState({});\n//     const serverErrors = useSelector(state => state.shops.serverErrors);\n//     const dispatch = useDispatch();\n//     const shops = useSelector(state => state.shops.data);\n\n//     useEffect(() => {\n//         if (editId) {\n//             const shopToEdit = shops.find(shop => shop._id === editId);\n//             if (shopToEdit) {\n//                 setShopData({\n//                     shopName: shopToEdit.shopName,\n//                     area: shopToEdit.address?.area || '',\n//                     pincode: shopToEdit.address?.pincode || '',\n//                     city: shopToEdit.address?.city || '',\n//                     state: shopToEdit.address?.state || '',\n//                     email: shopToEdit.contact?.email || '',\n//                     mobile: shopToEdit.contact?.mobile || '',\n//                     description: shopToEdit.description || '',\n//                     approvalStatus: shopToEdit.approvalStatus || 'pending'\n//                 });\n//             }\n//         }\n//     }, [editId, shops]);\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setShopData({ ...shopData, [name]: value });\n//     };\n\n//     const validateForm = () => {\n//         const errors = {};\n\n//         if (!shopData.shopName.trim()) {\n//             errors.shopName = 'Shop name is required';\n//         }\n\n//         // if (!shopData.area.trim()) {\n//         //     errors.area = 'Area is required';\n//         // }\n\n//         // if (!shopData.pincode.trim()) {\n//         //     errors.pincode = 'Pincode is required';\n//         // } else if (isNaN(shopData.pincode)) {\n//         //     errors.pincode = 'Pincode must be a number';\n//         // }\n//         if (!String(shopData.pincode).trim()) { // Convert pincode to string before trim\n//             errors.pincode = 'Pincode is required';\n//         } else if (isNaN(shopData.pincode)) {\n//             errors.pincode = 'Pincode must be a number';\n//         }\n\n//         if (!shopData.city.trim()) {\n//             errors.city = 'City is required';\n//         }\n\n//         if (!shopData.state.trim()) {\n//             errors.state = 'State is required';\n//         }\n\n//         if (!shopData.email.trim()) {\n//             errors.email = 'Email is required';\n//         } else if (!/\\S+@\\S+\\.\\S+/.test(shopData.email)) {\n//             errors.email = 'Email is invalid';\n//         }\n\n//         // if (!shopData.mobile.trim()) {\n//         //     errors.mobile = 'Mobile number is required';\n//         // } else if (isNaN(shopData.mobile)) {\n//         //     errors.mobile = 'Mobile number must be a number';\n//         // }\n\n//         if (!String(shopData.mobile).trim()) { // Convert mobile to string before trim\n//             errors.mobile = 'Mobile number is required';\n//         } else if (isNaN(shopData.mobile)) {\n//             errors.mobile = 'Mobile number must be a number';\n//         }\n\n//         if (!shopData.description.trim()) {\n//             errors.description = 'Description is required';\n//         }\n\n//         setFormErrors(errors);\n//         return Object.keys(errors).length === 0;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateForm()) return;\n\n//         try {\n//             if (editId) {\n//                 await dispatch(startUpdateShop(editId, shopData));\n//             } else {\n//                 await dispatch(startCreateShop(shopData));\n//             }\n\n//             dispatch(clearServerErrors());\n//             toggle();\n//         } catch (error) {\n//             console.error('Error:', error);\n//             if (error.response && error.response.data) {\n//                 dispatch(setServerErrors(error.response.data.errors || []));\n//             }\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             {serverErrors && serverErrors.length > 0 && (\n//                 <div>\n//                     {serverErrors.map((error, index) => (\n//                         <p key={index} style={{ color: 'red' }}>{error.msg}</p>\n//                     ))}\n//                 </div>\n//             )}\n\n//             <div>\n//                 <label>Shop Name:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"shopName\"\n//                     value={shopData.shopName}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.shopName && <p style={{ color: 'red' }}>{formErrors.shopName}</p>}\n//             </div>\n\n//             <div>\n//                 <label>Area:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"area\"\n//                     value={shopData.area}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.area && <p style={{ color: 'red' }}>{formErrors.area}</p>}\n//             </div>\n\n//             <div>\n//                 <label>Pincode:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"pincode\"\n//                     value={shopData.pincode}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.pincode && <p style={{ color: 'red' }}>{formErrors.pincode}</p>}\n//             </div>\n\n//             <div>\n//                 <label>City:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"city\"\n//                     value={shopData.city}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.city && <p style={{ color: 'red' }}>{formErrors.city}</p>}\n//             </div>\n\n//             <div>\n//                 <label>State:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"state\"\n//                     value={shopData.state}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.state && <p style={{ color: 'red' }}>{formErrors.state}</p>}\n//             </div>\n\n//             <div>\n//                 <label>Email:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"email\"\n//                     value={shopData.email}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.email && <p style={{ color: 'red' }}>{formErrors.email}</p>}\n//             </div>\n\n//             <div>\n//                 <label>Mobile:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"mobile\"\n//                     value={shopData.mobile}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.mobile && <p style={{ color: 'red' }}>{formErrors.mobile}</p>}\n//             </div>\n\n//             <div>\n//                 <label>Description:</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"description\"\n//                     value={shopData.description}\n//                     onChange={handleChange}\n//                 />\n//                 {formErrors.description && <p style={{ color: 'red' }}>{formErrors.description}</p>}\n//             </div>\n\n//             {!editId && (\n//                 <div>\n//                     <label>Approval Status:</label>\n//                     <select\n//                         name=\"approvalStatus\"\n//                         value={shopData.approvalStatus}\n//                         onChange={handleChange}\n//                     >\n//                         <option value=\"pending\">Pending</option>\n//                         <option value=\"rejected\">Rejected</option>\n//                         <option value=\"approved\">Approved</option>\n//                     </select>\n//                     {formErrors.approvalStatus && <p style={{ color: 'red' }}>{formErrors.approvalStatus}</p>}\n//                 </div>\n//             )}\n\n//             <div>\n//                 <button type=\"submit\">Submit</button>\n//             </div>\n//         </form>\n//     );\n// }\n_s(ShopsForm, \"dseVsnX0i4Pyaf32wF+hFOiXZ+U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ShopsForm;\nvar _c;\n$RefreshReg$(_c, \"ShopsForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","startCreateShop","startUpdateShop","setServerErrors","clearServerErrors","jsxDEV","_jsxDEV","Fragment","_Fragment","ShopsForm","props","_s","shopName","setShopname","area","setArea","pincode","setPincode","city","setCity","state","setState","email","setEmail","mobile","setMobile","description","setDescription","approvalStatus","setApprovalStatus","formErrors","setFormErrors","shop","setShop","editId","dispatch","serverErrors","shops","data","shopData","find","_id","_shopData$address","_shopData$address2","_shopData$address3","_shopData$address4","_shopData$contact","_shopData$contact2","address","contact","validateForm","errors","trim","Object","keys","length","handleSubmit","e","preventDefault","formData","resetForm","err","console","error","response","children","onSubmit","map","ele","i","msg","fileName","_jsxFileName","lineNumber","columnNumber","type","value","className","onChange","target","style","color","_c","$RefreshReg$"],"sources":["C:/Users/samiksha wagrekar/OneDrive/Documents/oct23 mern/ChitGem-app/frontend/my-app/src/Components/Shop/ShopsForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startCreateShop, startUpdateShop, setServerErrors,clearServerErrors } from '../Actions/shops'\r\n\r\nexport default function ShopsForm(props) {\r\n    const [shopName, setShopname] = useState('')\r\n    const [area, setArea] = useState('')\r\n    const [pincode, setPincode] = useState(0)\r\n    const [city, setCity] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [email, setEmail] = useState(0)\r\n    const [mobile, setMobile] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [approvalStatus, setApprovalStatus] = useState('pending')\r\n    const [formErrors, setFormErrors] = useState({})\r\n    const [shop,setShop]= useState({})\r\n    // const [serverErrors,setServerErrors]=useState([])\r\n    const { editId } = props\r\n\r\n    const dispatch = useDispatch()\r\n    const serverErrors = useSelector((state) => state.shops.serverErrors);\r\n    const shops = useSelector(state => state.shops)\r\n\r\n\r\n    useEffect(() => {\r\n        setShop(shop)\r\n        if (shops && shops.data) {\r\n            const shopData = shops.data.find((shop) => shop._id === editId)\r\n        if (shopData) {\r\n            setShopname(shopData.shopName || '')\r\n            setArea(shopData.address?.area || '') // Handle optional chaining for nested properties\r\n            setPincode(shopData.address?.pincode || '')\r\n            setCity(shopData.address?.city || '')\r\n            setState(shopData.address?.state || '')\r\n            setEmail(shopData.contact?.email || '')\r\n            setMobile(shopData.contact?.mobile || '')\r\n            setDescription(shopData.description || '')\r\n            setApprovalStatus(shopData.approvalStatus || 'pending')\r\n        }\r\n        else {\r\n            setShopname('')\r\n            setArea('')\r\n            setPincode('')\r\n            setCity('')\r\n            setState('')\r\n            setEmail('')\r\n            setMobile('')\r\n            setDescription('')\r\n            setApprovalStatus('pending')\r\n        }\r\n    }\r\n    }, [shop, editId])\r\n\r\n    const validateForm = () => {\r\n        const errors = {}\r\n\r\n        if (!shopName.trim()) {\r\n            errors.shopName = 'Shop name is required'\r\n        }\r\n\r\n        if (!area.trim()) {\r\n            errors.area = 'Area is required'\r\n        }\r\n\r\n        if (!pincode) {\r\n            errors.pincode = 'Pincode is required'\r\n        } \r\n\r\n        if (!city.trim()) {\r\n            errors.city = 'City is required'\r\n        }\r\n\r\n        if (!state.trim()) {\r\n            errors.state = 'State is required'\r\n        }\r\n\r\n        if (!email.trim()) {\r\n            errors.email = 'Email is required'\r\n        }\r\n\r\n        if (!mobile) {\r\n            errors.mobile = 'Mobile number is required'\r\n        } \r\n\r\n        if (!description.trim()) {\r\n            errors.description = 'Description is required'\r\n        }\r\n\r\n        setFormErrors(errors)\r\n        return Object.keys(errors).length === 0\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (!validateForm()) return\r\n\r\n        const formData = {\r\n            shopName,\r\n            address: { area, pincode, city, state },\r\n            contact: { mobile, email },\r\n            description,\r\n            approvalStatus\r\n        }\r\n\r\n        try {\r\n            if (editId) {\r\n                dispatch(startUpdateShop(editId, formData))\r\n            } else {\r\n                dispatch(startCreateShop(formData))\r\n            }\r\n            dispatch(clearServerErrors())\r\n            resetForm()\r\n        } catch (err) {\r\n            console.error('Error:', err)\r\n            if (err.response && err.response.data) {\r\n                dispatch(setServerErrors(err.response.data.errors || []))\r\n            }\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setShopname('')\r\n        setArea('')\r\n        setPincode('')\r\n        setCity('')\r\n        setState('')\r\n        setEmail('')\r\n        setMobile('')\r\n        setDescription('')\r\n        setApprovalStatus('pending')\r\n        setFormErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <form onSubmit={handleSubmit}>\r\n            {\r\n                serverErrors.length > 0 && (\r\n                    <div>\r\n                        These errors prohibited the form from being saved:\r\n                        <ul>\r\n                            {serverErrors.map((ele, i) => (\r\n                                <li key={i}> {ele.msg}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n                <div>\r\n                    <label>Shop Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={shopName}\r\n                        className='form-control'\r\n                        onChange={(e) => setShopname(e.target.value)} />\r\n                    {formErrors.shopName && <p style={{ color: 'red' }}>{formErrors.shopName}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Area:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={area}\r\n                        className='form-control'\r\n                        onChange={(e) => setArea(e.target.value)} />\r\n                    {formErrors.area && <p style={{ color: 'red' }}>{formErrors.area}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Pincode:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className='form-control'\r\n                        value={pincode}\r\n                        onChange={(e) => setPincode(e.target.value)} />\r\n                    {formErrors.pincode && <p style={{ color: 'red' }}>{formErrors.pincode}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                    {formErrors.city && <p style={{ color: 'red' }}>{formErrors.city}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>State:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        value={state}\r\n                        onChange={(e) => setState(e.target.value)} />\r\n                    {formErrors.state && <p style={{ color: 'red' }}>{formErrors.state}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                    {formErrors.email && <p style={{ color: 'red' }}>{formErrors.email}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Mobile:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        value={mobile}\r\n                        onChange={(e) => setMobile(e.target.value)} />\r\n                    {formErrors.mobile && <p style={{ color: 'red' }}>{formErrors.mobile}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Description:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={description}\r\n                        className='form-control'\r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                    {formErrors.description && <p style={{ color: 'red' }}>{formErrors.description}</p>}\r\n                </div>\r\n\r\n                {!props.editId && (  // Conditionally render the Approval Status field if not editing\r\n                    <div>\r\n                        <label>Approval Status:</label>\r\n                        <select\r\n                            value={approvalStatus}\r\n                            onChange={(e) => setApprovalStatus(e.target.value)}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                            <option value=\"approved\">Approved</option>\r\n                        </select>\r\n                        {formErrors.approvalStatus && <p style={{ color: 'red' }}>{formErrors.approvalStatus}</p>}\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { startCreateShop, startUpdateShop, clearServerErrors, setServerErrors } from '../Actions/shops';\r\n\r\n// export default function ShopsForm({ editId, toggle }) {\r\n//     const [shopData, setShopData] = useState({\r\n//         shopName: '',\r\n//         area: '',\r\n//         pincode: '',\r\n//         city: '',\r\n//         state: '',\r\n//         email: '',\r\n//         mobile: '',\r\n//         description: '',\r\n//         approvalStatus: 'pending'\r\n//     });\r\n//     const [formErrors, setFormErrors] = useState({});\r\n//     const serverErrors = useSelector(state => state.shops.serverErrors);\r\n//     const dispatch = useDispatch();\r\n//     const shops = useSelector(state => state.shops.data);\r\n\r\n//     useEffect(() => {\r\n//         if (editId) {\r\n//             const shopToEdit = shops.find(shop => shop._id === editId);\r\n//             if (shopToEdit) {\r\n//                 setShopData({\r\n//                     shopName: shopToEdit.shopName,\r\n//                     area: shopToEdit.address?.area || '',\r\n//                     pincode: shopToEdit.address?.pincode || '',\r\n//                     city: shopToEdit.address?.city || '',\r\n//                     state: shopToEdit.address?.state || '',\r\n//                     email: shopToEdit.contact?.email || '',\r\n//                     mobile: shopToEdit.contact?.mobile || '',\r\n//                     description: shopToEdit.description || '',\r\n//                     approvalStatus: shopToEdit.approvalStatus || 'pending'\r\n//                 });\r\n//             }\r\n//         }\r\n//     }, [editId, shops]);\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setShopData({ ...shopData, [name]: value });\r\n//     };\r\n\r\n//     const validateForm = () => {\r\n//         const errors = {};\r\n\r\n//         if (!shopData.shopName.trim()) {\r\n//             errors.shopName = 'Shop name is required';\r\n//         }\r\n\r\n//         // if (!shopData.area.trim()) {\r\n//         //     errors.area = 'Area is required';\r\n//         // }\r\n\r\n//         // if (!shopData.pincode.trim()) {\r\n//         //     errors.pincode = 'Pincode is required';\r\n//         // } else if (isNaN(shopData.pincode)) {\r\n//         //     errors.pincode = 'Pincode must be a number';\r\n//         // }\r\n//         if (!String(shopData.pincode).trim()) { // Convert pincode to string before trim\r\n//             errors.pincode = 'Pincode is required';\r\n//         } else if (isNaN(shopData.pincode)) {\r\n//             errors.pincode = 'Pincode must be a number';\r\n//         }\r\n\r\n//         if (!shopData.city.trim()) {\r\n//             errors.city = 'City is required';\r\n//         }\r\n\r\n//         if (!shopData.state.trim()) {\r\n//             errors.state = 'State is required';\r\n//         }\r\n\r\n//         if (!shopData.email.trim()) {\r\n//             errors.email = 'Email is required';\r\n//         } else if (!/\\S+@\\S+\\.\\S+/.test(shopData.email)) {\r\n//             errors.email = 'Email is invalid';\r\n//         }\r\n\r\n//         // if (!shopData.mobile.trim()) {\r\n//         //     errors.mobile = 'Mobile number is required';\r\n//         // } else if (isNaN(shopData.mobile)) {\r\n//         //     errors.mobile = 'Mobile number must be a number';\r\n//         // }\r\n\r\n//         if (!String(shopData.mobile).trim()) { // Convert mobile to string before trim\r\n//             errors.mobile = 'Mobile number is required';\r\n//         } else if (isNaN(shopData.mobile)) {\r\n//             errors.mobile = 'Mobile number must be a number';\r\n//         }\r\n\r\n//         if (!shopData.description.trim()) {\r\n//             errors.description = 'Description is required';\r\n//         }\r\n\r\n//         setFormErrors(errors);\r\n//         return Object.keys(errors).length === 0;\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (!validateForm()) return;\r\n\r\n//         try {\r\n//             if (editId) {\r\n//                 await dispatch(startUpdateShop(editId, shopData));\r\n//             } else {\r\n//                 await dispatch(startCreateShop(shopData));\r\n//             }\r\n\r\n//             dispatch(clearServerErrors());\r\n//             toggle();\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//             if (error.response && error.response.data) {\r\n//                 dispatch(setServerErrors(error.response.data.errors || []));\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             {serverErrors && serverErrors.length > 0 && (\r\n//                 <div>\r\n//                     {serverErrors.map((error, index) => (\r\n//                         <p key={index} style={{ color: 'red' }}>{error.msg}</p>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n\r\n//             <div>\r\n//                 <label>Shop Name:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"shopName\"\r\n//                     value={shopData.shopName}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.shopName && <p style={{ color: 'red' }}>{formErrors.shopName}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>Area:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"area\"\r\n//                     value={shopData.area}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.area && <p style={{ color: 'red' }}>{formErrors.area}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>Pincode:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"pincode\"\r\n//                     value={shopData.pincode}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.pincode && <p style={{ color: 'red' }}>{formErrors.pincode}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>City:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"city\"\r\n//                     value={shopData.city}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.city && <p style={{ color: 'red' }}>{formErrors.city}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>State:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"state\"\r\n//                     value={shopData.state}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.state && <p style={{ color: 'red' }}>{formErrors.state}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>Email:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"email\"\r\n//                     value={shopData.email}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.email && <p style={{ color: 'red' }}>{formErrors.email}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>Mobile:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"mobile\"\r\n//                     value={shopData.mobile}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.mobile && <p style={{ color: 'red' }}>{formErrors.mobile}</p>}\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label>Description:</label>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"description\"\r\n//                     value={shopData.description}\r\n//                     onChange={handleChange}\r\n//                 />\r\n//                 {formErrors.description && <p style={{ color: 'red' }}>{formErrors.description}</p>}\r\n//             </div>\r\n\r\n//             {!editId && (\r\n//                 <div>\r\n//                     <label>Approval Status:</label>\r\n//                     <select\r\n//                         name=\"approvalStatus\"\r\n//                         value={shopData.approvalStatus}\r\n//                         onChange={handleChange}\r\n//                     >\r\n//                         <option value=\"pending\">Pending</option>\r\n//                         <option value=\"rejected\">Rejected</option>\r\n//                         <option value=\"approved\">Approved</option>\r\n//                     </select>\r\n//                     {formErrors.approvalStatus && <p style={{ color: 'red' }}>{formErrors.approvalStatus}</p>}\r\n//                 </div>\r\n//             )}\r\n\r\n//             <div>\r\n//                 <button type=\"submit\">Submit</button>\r\n//             </div>\r\n//         </form>\r\n//     );\r\n// }\r\n"],"mappings":"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AAA,OACJ;EAAC,gBACT,CAAC;AAEX;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA/D,EAAA,CAzewBF,SAAS;EAAA,QAeZV,WAAW,EACPC,WAAW,EAClBA,WAAW;AAAA;AAAAkF,EAAA,GAjBLzE,SAAS;AAAA,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}